package src;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.text.SimpleDateFormat;
import java.util.Date;

public class Server implements AutoCloseable {
    public static final int SOCKET_PORT = 8000;
    private ServerSocket serverSocket;
    private long fileCounter = 0L;

    public Server(int socketPort) throws IOException {
        this.serverSocket = new ServerSocket(socketPort);
    }

    public static void main(String[] args) throws Exception {
        System.out.println("PID: " + ProcessHandle.current().pid());

        System.out.println("Listen...");
        try (Server2 server = new Server2(SOCKET_PORT)) {
            System.out.println("Listen... Done.");
            server.run();
        }
    }

    public void run() throws IOException {
        while (true) {
            Socket socket = serverSocket.accept();
            String myFile = nextFileName();
            new Thread(() -> {
                installFile(socket, myFile);
            }).start();
        }
    }

    private void installFile(Socket socket, String myFileName) {
        System.out.println("Server: Name directory is: " + myFileName);
        try (InputStream in = socket.getInputStream();
             FileOutputStream fileOut = new FileOutputStream(myFileName)) {
            byte[] buffer = new byte[1024 * 1024];
            int a;
            while ((a = in.read(buffer)) != -1) {
                fileOut.write(buffer, 0, a);
            }
        } catch (IOException ex) {
            ex.printStackTrace();
            new File(myFileName).delete();
            //TODO: cline myFileName
        } finally {
            try {
                socket.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        System.out.println("Done: " + myFileName);

    }

    private String nextFileName() {
        fileCounter++;
        Date date = new Date();
        SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd_HHmmss_"); // 2023-02-01_225601_1.txt
        return "E://" + formater.format(date) + fileCounter;
    }

    @Override
    public void close() throws Exception {
        serverSocket.close();
    }
}
